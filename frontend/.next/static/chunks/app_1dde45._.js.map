{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/components/ProductForm.js"],"sourcesContent":["\"use client\"; \r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst ProductForm = ({ onRefresh }) => {\r\n  const [products, setProducts] = useState([]);\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [price, setPrice] = useState('');\r\n  const [quantity, setQuantity] = useState('');\r\n  const [editing, setEditing] = useState(false);\r\n  const [currentProductId, setCurrentProductId] = useState(null);\r\n\r\n  // Fetch products\r\n  const fetchProducts = async () => {\r\n    const response = await axios.get('http://localhost:5000/api/products');\r\n    setProducts(response.data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchProducts();\r\n  }, [onRefresh]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const newProduct = { name, description, price: parseFloat(price), quantity: parseInt(quantity) };\r\n\r\n    if (editing) {\r\n      await axios.put(`http://localhost:5000/api/products/${currentProductId}`, newProduct);\r\n    } else {\r\n      await axios.post('http://localhost:5000/api/products', newProduct);\r\n    }\r\n\r\n    resetForm();\r\n    fetchProducts(); // Refresh the product list\r\n    onRefresh(); // Call the refresh handler\r\n  };\r\n\r\n  const handleEdit = (product) => {\r\n    setName(product.name);\r\n    setDescription(product.description);\r\n    setPrice(product.price);\r\n    setQuantity(product.quantity);\r\n    setCurrentProductId(product.id);\r\n    setEditing(true);\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await axios.delete(`http://localhost:5000/api/products/${id}`);\r\n    fetchProducts(); // Refresh the product list\r\n    onRefresh(); // Call the refresh handler\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setDescription('');\r\n    setPrice('');\r\n    setQuantity('');\r\n    setCurrentProductId(null);\r\n    setEditing(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" placeholder=\"Name\" value={name} onChange={(e) => setName(e.target.value)} required />\r\n        <input type=\"text\" placeholder=\"Description\" value={description} onChange={(e) => setDescription(e.target.value)} />\r\n        <input type=\"number\" placeholder=\"Price\" value={price} onChange={(e) => setPrice(e.target.value)} required />\r\n        <input type=\"number\" placeholder=\"Quantity\" value={quantity} onChange={(e) => setQuantity(e.target.value)} required />\r\n        <button type=\"submit\">{editing ? 'Update Product' : 'Add Product'}</button>\r\n      </form>\r\n\r\n      <h2>Product List</h2>\r\n      <ul className=\"product-list\">\r\n        {products.map(product => (\r\n          <li key={product.id}>\r\n            <h2>{product.name}</h2>\r\n            <p>{product.description}</p>\r\n            <p>Price: <span>${product.price}</span></p>\r\n            <p>Quantity: <span>{product.quantity}</span></p>\r\n            <button onClick={() => handleEdit(product)}>Edit</button>\r\n            <button onClick={() => handleDelete(product.id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProductForm;\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 239, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 245, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/app/page.js"],"sourcesContent":["\"use client\";\r\nimport { useState } from 'react';\r\nimport ProductForm from './components/ProductForm';\r\n\r\nexport default function Home() {\r\n  const [refresh, setRefresh] = useState(false);\r\n\r\n  const handleRefresh = () => {\r\n    setRefresh(!refresh);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>Product Management System</h1>\r\n      <ProductForm onRefresh={handleRefresh} />\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;AACA;;;AAFA;;;AAIe,SAAS;;IACtB,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,MAAM,gBAAgB;QACpB,WAAW,CAAC;IACd;IAEA,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;0BAAG;;;;;;0BACJ,6LAAC,mIAAA,CAAA,UAAW;gBAAC,WAAW;;;;;;;;;;;;AAG9B;GAbwB;KAAA"}},
    {"offset": {"line": 293, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}